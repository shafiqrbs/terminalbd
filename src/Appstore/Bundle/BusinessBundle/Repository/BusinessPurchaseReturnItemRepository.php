<?php

namespace Appstore\Bundle\BusinessBundle\Repository;
use Appstore\Bundle\BusinessBundle\Entity\BusinessInvoice;
use Appstore\Bundle\BusinessBundle\Entity\BusinessInvoiceParticular;
use Appstore\Bundle\BusinessBundle\Entity\BusinessParticular;
use Doctrine\ORM\EntityRepository;

/**
 * MedicinePurchaseReturnItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BusinessPurchaseReturnItemRepository extends EntityRepository
{
    public function purchaseReturnStockUpdate(BusinessParticular $item)
    {
        $qb = $this->createQueryBuilder('e');
        $qb->select('SUM(e.quantity) AS quantity');
        $qb->where('e.businessParticular = :businessParticular')->setParameter('businessParticular', $item->getId());
        $qnt = $qb->getQuery()->getOneOrNullResult();
        return $qnt['quantity'];
    }

    public function deletePurchaseReturnItem(BusinessInvoiceParticular $invoiceParticular)
    {
       $em = $this->_em;
       $entity = $this->findOneBy(array('salesInvoiceItem' => $invoiceParticular->getId()));
       if($entity){
           $em->remove($entity);
           $em->flush();
       }
       $em->getRepository('BusinessBundle:BusinessParticular')->updateRemoveStockQuantity($invoiceParticular->getBusinessParticular(), "purchase-return");
    }

    public function removePurchaseReturn(BusinessInvoice $entity)
    {
        $em = $this->_em;
        foreach ($entity->getBusinessInvoiceParticulars() as $particular){
            $this->deletePurchaseReturnItem($particular);
        }
        $entity = $em->getRepository('BusinessBundle:BusinessPurchaseReturn')->findOneBy(array('businessConfig' => $entity->getBusinessConfig(),'salesInvoice' => $entity->getInvoice()));
        if($entity){
            $em->remove($entity);
            $em->flush();
        }
    }
}
