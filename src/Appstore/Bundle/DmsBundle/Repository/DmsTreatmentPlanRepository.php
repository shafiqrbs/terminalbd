<?php

namespace Appstore\Bundle\DmsBundle\Repository;
use Appstore\Bundle\DmsBundle\Entity\DmsInvoice;
use Appstore\Bundle\DmsBundle\Entity\DmsTreatmentPlan;
use Appstore\Bundle\HospitalBundle\Controller\InvoiceController;
use Appstore\Bundle\HospitalBundle\Entity\AdmissionPatientParticular;
use Appstore\Bundle\HospitalBundle\Entity\Invoice;
use Appstore\Bundle\HospitalBundle\Entity\InvoiceParticular;
use Appstore\Bundle\HospitalBundle\Entity\Particular;
use Core\UserBundle\Entity\User;
use Doctrine\ORM\EntityRepository;
use Setting\Bundle\ToolBundle\Entity\GlobalOption;


/**
 * PathologyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DmsTreatmentPlanRepository extends EntityRepository
{

    public function insertInvoiceItems($invoice, $data)
    {

        $particular = $this->_em->getRepository('DmsBundle:DmsParticular')->find($data['particularId']);
        $em = $this->_em;
        $entity = new DmsTreatmentPlan();
        $invoiceDmsParticular = $this->_em->getRepository('DmsBundle:DmsTreatmentPlan')->findOneBy(array('dmsInvoice'=>$invoice ,'dmsParticular' => $particular));
        if(!empty($invoiceDmsParticular)) {
            $entity = $invoiceDmsParticular;
            if ($particular->getService()->getHasQuantity() == 1){
                $entity->setQuantity($invoiceDmsParticular->getQuantity() + $data['quantity']);
            }else{
                $entity->setQuantity(1);
            }
            $entity->setSubTotal($data['price'] * $entity->getQuantity());

        }else{

            if ($particular->getService()->getHasQuantity() == 1){
                $entity->setQuantity($data['quantity']);
            }else{
                $entity->setQuantity(1);
            }
            $entity->setPrice($data['price']);
            $entity->setSubTotal($data['price'] * $data['quantity']);
        }

        $datetime = !empty($data['appointmentDate']) ? $data['appointmentDate'] : '' ;
        $entity->setAppointmentDate($datetime);
        $entity->setDmsInvoice($invoice);
        $entity->setDmsParticular($particular);
        $entity->setStatus(false);
        $entity->setEstimatePrice($particular->getPrice());
        $em->persist($entity);
        $em->flush();

    }

    public function getSalesItems(DmsInvoice $sales)
    {
        $entities = $sales->getDmsTreatmentPlans();
        $data = '';
        $i = 1;
        /* @var $entity DmsTreatmentPlan */

        foreach ($entities as $entity) {

            if ($entity->getStatus() == 1)  {
               $discount = $entity->getDiscount();
            }else{
                $discount ='<a  class="editable" data-name="Discount" href="javascript:"  data-url="/dms/invoice/inline-update" data-type="text" data-pk="'.$entity->getId().'" data-original-title="Change discount amount">'.$entity->getDiscount().'</a>';
            }

            if ($entity->getStatus() == 1)  {
               $payment = $entity->getPayment();
            }else{
               $payment ='<a  class="editable" data-name="Payment" href="javascript:"  data-url="/dms/invoice/inline-update" data-type="text" data-pk="'.$entity->getId().'" data-original-title="Change discount amount">'.$entity->getPayment().'</a>';
            }

            if ($entity->getStatus() == 1)  {
                $appointmentDate = $entity->getAppointmentDate();
            }else{
                $appointmentDate ='<a  class="editable" data-name="AppointmentDate" href="javascript:"  data-url="/dms/invoice/inline-update" data-type="text" data-pk="'.$entity->getId().'" data-original-title="Change discount amount">'.$entity->getAppointmentDate().'</a>';
            }

            $data .= '<tr id="remove-'. $entity->getId() . '">';
            $data .= '<td class="numeric" >' . $i . '</td>';
            $data .= '<td class="numeric" >' . $entity->getDmsParticular()->getParticularCode().' - '. $entity->getDmsParticular()->getName(). '</td>';
            $data .= '<td class="numeric" >' . $appointmentDate . '</td>';
            $data .= '<td class="numeric" >' . $entity->getPrice() . '</td>';
            $data .= '<td class="numeric" >' . $entity->getSubTotal() . '</td>';
            $data .= '<td class="numeric" >' . $discount . '</td>';
            $data .= '<td class="numeric" >' . $payment . '</td>';
            $data .= '<td class="numeric" >
            <a id="'.$entity->getId().'" data-id="'.$entity->getId().'" title="Are you sure went to approve ?" data-url="/dms/invoice/' . $entity->getId() . '/treatment-approved" href="javascript:" class="btn blue mini approve" >Approve</a>
            <a id="'.$entity->getId().'" data-id="'.$entity->getId().'" title="Are you sure went to delete ?" data-url="/dms/invoice/' . $sales->getId() . '/' . $entity->getId() . '/treatment-delete" href="javascript:" class="btn red mini treatmentDelete" ><i class="icon-trash"></i></a>
            </td>';
            $data .= '</tr>';
            $i++;
        }
        return $data;
    }

    public function insertPaymentTransaction($data)
    {
        $em = $this->_em;
        $invoiceDmsParticular = $this->_em->getRepository('DmsBundle:DmsTreatmentPlan')->find($data['invoiceParticular']);
        $invoiceDmsParticular->setPayment($data['payment']);
        $invoiceDmsParticular->setDiscount($data['discount']);
        $em->persist($invoiceDmsParticular);
        $em->flush();
    }

}
