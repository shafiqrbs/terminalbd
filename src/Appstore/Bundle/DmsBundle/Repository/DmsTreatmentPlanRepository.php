<?php

namespace Appstore\Bundle\DmsBundle\Repository;
use Appstore\Bundle\DmsBundle\Entity\DmsConfig;
use Appstore\Bundle\DmsBundle\Entity\DmsInvoice;
use Appstore\Bundle\DmsBundle\Entity\DmsTreatmentPlan;
use Doctrine\ORM\EntityRepository;
use Setting\Bundle\ToolBundle\Entity\GlobalOption;


/**
 * PathologyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DmsTreatmentPlanRepository extends EntityRepository
{

    public function findTodaySchedule(DmsConfig $config,$data= array())
    {

        $curDate =  New \DateTime("now");
        $curDate = $curDate->format('d-m-Y');
        $created = isset($data['created'])? $data['created'] : (string)$curDate ;
        $qb = $this->createQueryBuilder('appointment');
        $qb->join('appointment.dmsInvoice','invoice');
        $qb->join('appointment.dmsParticular','particular');
        $qb->join('invoice.customer','customer');
        $qb->select('customer.name as customerName');
        $qb->addSelect('invoice.invoice as patientId');
        $qb->addSelect('invoice.process as process');
        $qb->addSelect('particular.code as particularCode');
        $qb->addSelect('particular.name as particularName');
        $qb->addSelect('appointment.appointmentTime as appointmentTime');
        $qb->addSelect('appointment.status as appointmentStatus');
        $qb->where('invoice.dmsConfig ='.$config->getId());
        $qb->andWhere('invoice.process IN (:process)');
        $qb->setParameter('process', array('Appointment','Visit','Done'));
        $result = $qb->getQuery()->getArrayResult();
        return $result;
        //$qb->andWhere("e.created = :created");
        //$qb->setParameter('created', '31-01-2018');


    }

    public function insertInvoiceItems($invoice, $data)
    {

        $particular = $this->_em->getRepository('DmsBundle:DmsParticular')->find($data['particularId']);
        $em = $this->_em;
        $entity = new DmsTreatmentPlan();
        $invoiceDmsParticular = $this->_em->getRepository('DmsBundle:DmsTreatmentPlan')->findOneBy(array('dmsInvoice'=>$invoice ,'dmsParticular' => $particular));
        if(!empty($invoiceDmsParticular)) {
            $entity = $invoiceDmsParticular;
            if ($particular->getService()->getHasQuantity() == 1){
                $entity->setQuantity($invoiceDmsParticular->getQuantity() + $data['quantity']);
            }else{
                $entity->setQuantity(1);
            }
            $entity->setSubTotal($data['price'] * $entity->getQuantity());

        }else{

            if ($particular->getService()->getHasQuantity() == 1){
                $entity->setQuantity($data['quantity']);
            }else{
                $entity->setQuantity(1);
            }
            $entity->setPrice($data['price']);
            $entity->setSubTotal($data['price'] * $data['quantity']);
        }

        $datetime = !empty($data['appointmentDate']) ? $data['appointmentDate'] : '' ;
        $appointmentTime = !empty($data['appointmentTime']) ? $data['appointmentTime'] : '' ;
        $entity->setAppointmentDate($datetime);
        $entity->setAppointmentTime($appointmentTime);
        $entity->setDmsInvoice($invoice);
        $entity->setDmsParticular($particular);
        $entity->setStatus(false);
        $entity->setEstimatePrice($particular->getPrice());
        $em->persist($entity);
        $em->flush();

    }

    public function getSalesItems(DmsInvoice $sales)
    {
        $entities = $sales->getDmsTreatmentPlans();
        $data = '';
        $i = 1;
        /* @var $entity DmsTreatmentPlan */

        foreach ($entities as $entity) {

            if ($entity->getStatus() == 1)  {
               $discount = $entity->getDiscount();
            }else{
                $discount ='<a  class="editable" data-name="Discount" href="javascript:"  data-url="/dms/invoice/inline-update" data-type="text" data-pk="'.$entity->getId().'" data-original-title="Change discount amount">'.$entity->getDiscount().'</a>';
            }

            if ($entity->getStatus() == 1)  {
               $payment = $entity->getPayment();
            }else{
               $payment ='<a  class="editable" data-name="Payment" href="javascript:"  data-url="/dms/invoice/inline-update" data-type="text" data-pk="'.$entity->getId().'" data-original-title="Change payment amount">'.$entity->getPayment().'</a>';
            }

            if ($entity->getStatus() == 1)  {
                $appointmentDate = $entity->getAppointmentDate();
                $appointmentTime = $entity->getAppointmentTime();
            }else{
                $appointmentDate ='<a  class="btn mini blue-stripe btn-action editable editable-click" data-name="AppointmentDate" href="javascript:"  data-url="/dms/invoice/inline-update" data-type="text" data-pk="'.$entity->getId().'" data-original-title="Change Appointment Date">'.$entity->getAppointmentDate().'</a>';
                $appointmentTime ='<a  class="btn mini purple-stripe btn-action editable editable-click" data-name="AppointmentTime" data-source="/dms/invoice/inline-appointment-datetime-select" href="javascript:"  data-url="/dms/invoice/inline-update" data-type="text" data-value="'.$entity->getAppointmentTime().'" data-pk="'.$entity->getId().'" data-original-title="Change Appointment Time">'.$entity->getAppointmentTime().'</a>';
            }

            if ($entity->getStatus() == 1)  {
                $action ='Done';
            }else{
                $action ='<a id="'.$entity->getId().'" data-id="'.$entity->getId().'" title="Are you sure went to approve ?" data-url="/dms/invoice/' . $entity->getId() . '/treatment-approved" href="javascript:" class="btn blue mini approve" >Approve</a>
                        <a id="'.$entity->getId().'" data-id="'.$entity->getId().'" title="Are you sure went to delete ?" data-url="/dms/invoice/' . $sales->getId() . '/' . $entity->getId() . '/treatment-delete" href="javascript:" class="btn red mini treatmentDelete" ><i class="icon-trash"></i></a>';
            }

            $data .= '<tr id="remove-'. $entity->getId() . '">';
            $data .= '<td class="numeric" >' . $i . '</td>';
            $data .= '<td class="numeric" >' . $entity->getDmsParticular()->getParticularCode().' - '. $entity->getDmsParticular()->getName(). '</td>';
            $data .= '<td class="numeric" >' . $appointmentDate .'/'.$appointmentTime. '</td>';
            $data .= '<td class="numeric" >' . $entity->getPrice() . '</td>';
            $data .= '<td class="numeric" >' . $entity->getSubTotal() . '</td>';
            $data .= '<td class="numeric" >' . $discount . '</td>';
            $data .= '<td class="numeric" >' . $payment . '</td>';
            $data .= '<td class="numeric" >'.$action.'</td>';
            $data .= '</tr>';
            $i++;
        }
        return $data;
    }

    public function insertPaymentTransaction($data)
    {
        $em = $this->_em;
        $invoiceDmsParticular = $this->_em->getRepository('DmsBundle:DmsTreatmentPlan')->find($data['invoiceParticular']);
        $invoiceDmsParticular->setPayment($data['payment']);
        $invoiceDmsParticular->setDiscount($data['discount']);
        $em->persist($invoiceDmsParticular);
        $em->flush();
    }

}
