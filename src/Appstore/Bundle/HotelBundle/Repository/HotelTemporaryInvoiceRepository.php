<?php

namespace Appstore\Bundle\HotelBundle\Repository;
use Appstore\Bundle\HotelBundle\Entity\HotelConfig;
use Appstore\Bundle\HotelBundle\Entity\HotelInvoice;
use Appstore\Bundle\HotelBundle\Entity\HotelInvoiceParticular;
use Appstore\Bundle\HotelBundle\Entity\HotelParticular;
use Appstore\Bundle\HotelBundle\Entity\HotelProductionElement;
use Appstore\Bundle\HotelBundle\Entity\HotelPurchaseItem;
use Appstore\Bundle\HospitalBundle\Entity\InvoiceParticular;
use Appstore\Bundle\HotelBundle\Entity\HotelTemporaryInvoice;
use Appstore\Bundle\RestaurantBundle\Entity\ProductionElement;
use Core\UserBundle\Entity\User;
use Doctrine\ORM\EntityRepository;
use Setting\Bundle\ToolBundle\Entity\GlobalOption;


/**
 * HotelInvoiceParticularRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HotelTemporaryInvoiceRepository extends EntityRepository
{

	public function insertTemporaryRoom(User $user , HotelParticular $particular, $data)
    {

	    $start = strtotime($data['startDate']);
	    $end = strtotime($data['endDate']);
	    $quantity = ceil(abs($end - $start) / 86400)+1;

	    $begin = new \DateTime( $data['startDate']);
	    $end = new \DateTime( $data['endDate'] );
	    $end = $end->modify( '+1 day' );

	    $interval = new \DateInterval('P1D');
	    $period = new \DatePeriod($begin, $interval ,$end);

	    $bookingDate =array();
	    foreach ($period as $key => $date) {
		    $bookingDate[] = (string)$date->format('Y-m-d');
	    }

	    $em = $this->_em;
	    $existRoom = $this->findOneBy(array('createdBy'=> $user, 'hotelParticular'=>$particular));
	    if(!empty($existRoom)){
		    $entity =  $existRoom;
	    }else{
		    $entity = new HotelTemporaryInvoice();
	    }

	    $entity->setCreatedBy($user);
	    $entity->setQuantity((int)$quantity);
	    $entity->setHotelParticular($particular);
	    $entity->setGuestName($data['guestName']);
	    $entity->setGuestMobile($data['guestMobile']);
	    $entity->setChild($data['child']);
	    $entity->setAdult($data['adult']);
	    $entity->setStartDate((new \DateTime( $data['startDate'])));
	    $entity->setEndDate((new \DateTime( $data['endDate'])));
	    $entity->setBookingDate($bookingDate);
	    $entity->setPrice($data['salesPrice']);
	    $entity->setPurchasePrice($particular->getPurchasePrice());
	    $subTotal = ($entity->getQuantity() * $entity->getPrice());
	    $entity->setSubTotal($subTotal);
	    $em->persist($entity);
	    $em->flush();
    }

}
