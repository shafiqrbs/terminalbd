<?php
namespace Appstore\Bundle\InventoryBundle\Repository;
use Appstore\Bundle\AccountingBundle\Entity\Transaction;
use Appstore\Bundle\InventoryBundle\Entity\GoodsItem;
use Appstore\Bundle\InventoryBundle\Entity\PurchaseVendorItem;
use Doctrine\ORM\EntityRepository;

/**
 * GoodsItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GoodsItemRepository extends EntityRepository
{

    public function insertSubProduct(PurchaseVendorItem $entity,$data)
    {
        $em = $this->_em;
        $i=0;

        if($entity->getSubProduct() == 1 and isset($data['salesPrice']) ){

            foreach ($data['salesPrice'] as $value) {

                if(isset($data['goodsItem'][$i]) and !empty($data['goodsItem'][$i])){

                    $id = $data['goodsItem'][$i];

                    $goods = $this->_em->getRepository('InventoryBundle:GoodsItem')->find($id);
                    $goods->setSalesPrice($data['salesPrice'][$i]);
                    $goods->setWebPrice($data['webPrice'][$i]);
                    if(isset($data['size'][$i])){
                        $sizeId = $data['size'][$i];
                        $size = $this->_em->getRepository('InventoryBundle:ItemSize')->findOneBy(array('inventoryConfig'=>$entity->getInventoryConfig(),'id'=> $sizeId));
                        $goods->setSize($size);
                    }else{
                        $goods->setName($data['name'][$i]);
                    }

                }elseif( isset($data['salesPrice'][$i]) and !empty($data['salesPrice'][$i]) ) {

                    $goods = new GoodsItem();
                    $goods->setSalesPrice($data['salesPrice'][$i]);
                    $goods->setWebPrice($data['webPrice'][$i]);
                    if(isset($data['size'][$i])){
                        $sizeId = $data['size'][$i];
                        $size = $this->_em->getRepository('InventoryBundle:ItemSize')->findOneBy(array('inventoryConfig'=>$entity->getInventoryConfig(),'id'=> $sizeId));
                        $goods->setSize($size);
                    }else{
                        $goods->setName($data['name'][$i]);
                    }
                    $goods->setPurchaseVendorItem($entity);
                    $em->persist($goods);
                }
                $i++;
            }


        }
        $em->flush();
    }

}
