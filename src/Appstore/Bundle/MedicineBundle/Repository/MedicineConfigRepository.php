<?php

namespace Appstore\Bundle\MedicineBundle\Repository;
use Appstore\Bundle\DmsBundle\Entity\DmsInvoice;
use Appstore\Bundle\DoctorPrescriptionBundle\Entity\DpsInvoice;
use Appstore\Bundle\MedicineBundle\Entity\MedicineDoctorPrescribe;
use Core\UserBundle\Entity\User;
use Doctrine\ORM\EntityRepository;
use Setting\Bundle\ToolBundle\Entity\GlobalOption;


/**
 * DpsInvoiceParticularRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MedicineConfigRepository extends EntityRepository
{
    public function medicineReset(GlobalOption $option)
    {

        $em = $this->_em;
        $config = $option->getMedicineConfig()->getId();

        $sales = $em->createQuery('DELETE MedicineBundle:MedicineSales e WHERE e.medicineConfig = '.$config);
        $sales->execute();

        $purchase = $em->createQuery('DELETE MedicineBundle:MedicinePurchase e WHERE e.medicineConfig = '.$config);
        $purchase->execute();

        $house = $em->createQuery('DELETE MedicineBundle:MedicineStockHouse e WHERE e.medicineConfig = '.$config);
        $house->execute();

        $stock = $em->createQuery('DELETE MedicineBundle:MedicineStock e WHERE e.medicineConfig = '.$config);
       // $stock->execute();

        $qb = $this->_em->createQueryBuilder();
        $q = $qb->update('MedicineBundle:MedicineStock', 's')
            ->set('s.remainingQuantity', '?1')
            ->set('s.purchaseQuantity', '?2')
            ->set('s.purchaseReturnQuantity', '?3')
            ->set('s.salesQuantity', '?4')
            ->set('s.salesReturnQuantity', '?5')
            ->set('s.damageQuantity', '?6')
            ->set('s.averagePurchasePrice', '?7')
            ->set('s.averageSalesPrice', '?8')
            ->where('s.medicineConfig = ?9')
            ->setParameter(1, 0)
            ->setParameter(2, 0)
            ->setParameter(3, 0)
            ->setParameter(4, 0)
            ->setParameter(5, 0)
            ->setParameter(6, 0)
            ->setParameter(7, 0)
            ->setParameter(8, 0)
            ->setParameter(8, $config)
            ->getQuery();
        $p = $q->execute();
    }
}
