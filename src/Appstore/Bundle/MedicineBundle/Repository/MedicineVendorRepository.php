<?php

namespace Appstore\Bundle\MedicineBundle\Repository;
use Appstore\Bundle\MedicineBundle\Entity\MedicineConfig;
use Appstore\Bundle\MedicineBundle\Entity\MedicineVendor;
use Doctrine\ORM\EntityRepository;


/**
 * HmsVendorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MedicineVendorRepository extends EntityRepository
{
    public function searchAutoComplete(MedicineConfig $config,$q)
    {
        $qb = $this->createQueryBuilder('e');
        $qb->join('e.medicineConfig', 'ic');
        $qb->select('e.id as id');
        $qb->addSelect('e.companyName as text');
        $qb->where($qb->expr()->like("e.companyName", "'%$q%'"  ));
        $qb->andWhere("ic.id = :config");
        $qb->setParameter('config', $config->getId());
        $qb->groupBy('e.id');
        $qb->orderBy('e.companyName', 'ASC');
        $qb->setMaxResults( '30' );
        return $qb->getQuery()->getResult();

    }

    public function searchVendor(MedicineConfig $config,$q)
    {
        $qb = $this->createQueryBuilder('e');
        $qb->join('e.medicineConfig', 'ic');
        $qb->select('e.companyName as id');
        $qb->addSelect('e.companyName as text');
        $qb->where($qb->expr()->like("e.companyName", "'%$q%'"  ));
        $qb->andWhere("ic.id = :config");
        $qb->setParameter('config', $config->getId());
        $qb->groupBy('e.id');
        $qb->orderBy('e.companyName', 'ASC');
        $qb->setMaxResults( '30' );
        return $qb->getQuery()->getResult();

    }


    public function checkInInsert(MedicineConfig $config , $vendor)
    {
        $entity = $this->findOneBy(array('medicineConfig' => $config,'companyName' => $vendor));
        if(empty($entity)){
            $entity = new MedicineVendor();
            $entity->setMedicineConfig($config);
            $entity->setCompanyName($vendor);
            $entity->setName($vendor);
            $this->_em->persist($entity);
            $this->_em->flush();
        }
        return $entity;
    }

    public function listForVendorCustomer(MedicineConfig $config)
    {
	    $qb = $this->createQueryBuilder('e');
	    $qb->join('e.medicineConfig', 'ic');
	    $qb->select('e.companyName, e.id');
	    $qb->where("ic.id = :config")->setParameter('config', $config->getId());
	    $qb->andWhere("e.customer IS NOT NULL");
	    $qb->orderBy('e.companyName', 'ASC');
	    $result = $qb->getQuery()->getArrayResult();
	    return $result;
    }

}
