<?php

namespace Setting\Bundle\ContentBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Setting\Bundle\AppearanceBundle\Entity\Menu;
use Setting\Bundle\ContentBundle\Entity\Page;
use Setting\Bundle\ContentBundle\Entity\PageMeta;
use Setting\Bundle\ContentBundle\Entity\Portfolio;
use Setting\Bundle\ContentBundle\Entity\Service;
use Setting\Bundle\ContentBundle\Entity\TradeItem;

/**
 * PageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PageMetaRepository extends EntityRepository
{

    public function pageMeta(Page $page, $data)
    {

        $em = $this->_em;
        if ($page and isset($data['metaValue']) and !empty($data['metaValue'])) {

            $i = 0;
            foreach ($data['metaValue'] as $row):

                if (isset($data['metaValue'][$i]) and !empty($data['metaValue'][$i])) {

                    if (!empty($data['metaValue'][$i]) and !empty($data['metaId'][$i])) {
                        $entity = $em->getRepository('SettingContentBundle:PageMeta')->find($data['metaId'][$i]);
                    } elseif (!empty($data['metaValue'][$i])) {
                        $entity = new PageMeta();
                        $entity->setPage($page);
                    }
                    $entity->setMetaValue($data['metaValue'][$i]);
                    $entity->setMetaKey($data['metaKey'][$i]);
                    $em->persist($entity);
                }
                $i++;
            endforeach;
            $em->flush();

        }

    }

    public function portfolioPageMeta(Portfolio $portfolio, $data)
    {

        $em = $this->_em;
        if ($portfolio and isset($data['metaValue']) and !empty($data['metaValue'])) {

            $i = 0;
            foreach ($data['metaValue'] as $row):

                if (isset($data['metaValue'][$i]) and !empty($data['metaValue'][$i])) {

                    if (!empty($data['metaValue'][$i]) and !empty($data['metaId'][$i])) {
                        $entity = $em->getRepository('SettingContentBundle:PageMeta')->find($data['metaId'][$i]);
                    } elseif (!empty($data['metaValue'][$i])) {
                        $entity = new PageMeta();
                        $entity->setPortfolio($portfolio);
                    }
                    $entity->setMetaKey($data['metaKey'][$i]);
                    $entity->setMetaValue($data['metaValue'][$i]);
                    $em->persist($entity);

                }
                $i++;
            endforeach;
            $em->flush();

        }

    }
    public function servicePageMeta(Page $service, $data)
    {

        $em = $this->_em;
        if ($service and isset($data['metaValue']) and !empty($data['metaValue'])) {

            $i = 0;
            foreach ($data['metaValue'] as $row):

                if (isset($data['metaValue'][$i]) and !empty($data['metaValue'][$i])) {

                    if (!empty($data['metaValue'][$i]) and !empty($data['metaId'][$i])) {
                        $entity = $em->getRepository('SettingContentBundle:PageMeta')->find($data['metaId'][$i]);
                    } elseif (!empty($data['metaValue'][$i])) {
                        $entity = new PageMeta();
                        $entity->setService($service);
                    }
                    $entity->setMetaKey($data['metaKey'][$i]);
                    $entity->setMetaValue($data['metaValue'][$i]);
                    $em->persist($entity);

                }
                $i++;
            endforeach;
            $em->flush();

        }

    }
    public function tradeItemPageMeta(TradeItem $tradeItem, $data)
    {

        $em = $this->_em;
        if ($tradeItem and isset($data['metaValue']) and !empty($data['metaValue'])) {

            $i = 0;
            foreach ($data['metaValue'] as $row):

                if (isset($data['metaValue'][$i]) and !empty($data['metaValue'][$i])) {

                    if (!empty($data['metaValue'][$i]) and !empty($data['metaId'][$i])) {
                        $entity = $em->getRepository('SettingContentBundle:PageMeta')->find($data['metaId'][$i]);
                    } elseif (!empty($data['metaValue'][$i])) {
                        $entity = new PageMeta();
                        $entity->setTradeItem($tradeItem);
                    }
                    $entity->setMetaKey($data['metaKey'][$i]);
                    $entity->setMetaValue($data['metaValue'][$i]);
                    $em->persist($entity);

                }
                $i++;
            endforeach;
            $em->flush();

        }

    }

}
