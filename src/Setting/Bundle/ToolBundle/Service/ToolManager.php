<?php

namespace Setting\Bundle\ToolBundle\Service;

use Doctrine\ORM\EntityManager;
use Doctrine\Bundle\DoctrineBundle\Registry;
use Doctrine\ORM\EntityRepository;
use Doctrine\DBAL\Connection;

use Setting\Bundle\ToolBundle\Entity\GlobalOption;
use Symfony\Component\Debug\Debug;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * RequestManager
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

class ToolManager

{

    /**
     * @var EntityManager
     */
    protected $em;
    /**
     * @var \Doctrine\Bundle\DoctrineBundle\Registry
     */
    private $doctrine;

    public function  __construct(Registry $doctrine)
    {
        $this->doctrine = $doctrine;
        $this->em = $doctrine->getManager();
    }



    public function createDirectory($globalOption, $dir = null)
    {

        $assets_dir = $_SERVER['DOCUMENT_ROOT'].'/uploads/domain/';
        if(!file_exists($assets_dir.$globalOption)){
            if(mkdir($assets_dir.$globalOption, 0777, true)){
                //return $path;
                mkdir($assets_dir.$globalOption.'/setting', 0777, true);
                mkdir($assets_dir.$globalOption.'/setting/customize_template', 0777, true);
                mkdir($assets_dir.$globalOption.'/content', 0777, true);
                mkdir($assets_dir.$globalOption.'/inventory', 0777, true);
                mkdir($assets_dir.$globalOption.'/inventory/item/', 0777, true);
                mkdir($assets_dir.$globalOption.'/domain_user', 0777, true);
                mkdir($assets_dir.$globalOption.'/media', 0777, true);
            }else{
                return false;
            }
        }
        if(!empty($dir)){

            $path = $globalOption.'/'.$dir;
            if(!file_exists($assets_dir.$path)){
                if(mkdir($assets_dir.$path, 0777, true)){
                    return $path;
                }else{
                    return false;
                }
            }
            return $path = $globalOption.'/'.$dir;
        }

    }

    public function create_slide_dir($globalOption)
    {
        $assets_dir = __DIR__.'/../../../../../web/uploads/domain/';
        if(!file_exists($assets_dir.$globalOption)){
            if(mkdir($assets_dir.$globalOption, 0777, true)){
                mkdir($assets_dir.$globalOption.'/thumbs', 0777, true);
                mkdir($assets_dir.$globalOption.'/larges', 0777, true);
                //return $path;
            }else{
                return false;
            }
        }


    }

    public function deleteDirectory($dir)
    {
        if (!file_exists($dir)) return true;
        if (!is_dir($dir) || is_link($dir)) return unlink($dir);
        foreach (scandir($dir) as $item) {
            if ($item == '.' || $item == '..') continue;
            if (!deleteDirectory($dir . "/" . $item)) {
                chmod($dir . "/" . $item, 0777);
                if (!deleteDirectory($dir . "/" . $item)) return false;
            };
        }
        return rmdir($dir);
    }

    public function delete_directory($dir)
    {
        if(is_dir($dir))
        {
            $dir = (substr($dir, -1) != "/")? $dir."/":$dir;
            $openDir = opendir($dir);
            while($file = readdir($openDir))
            {
                if(!in_array($file, array(".", "..")))
                {
                    if(!is_dir($dir.$file))
                        @unlink($dir.$file);

                }
            }
            closedir($openDir);
            @rmdir($dir);
        }
    }

    public function specialExpClean($string) {

        $string = str_replace(' ', '', $string); // Replaces all spaces with hyphens.
        $string = preg_replace('/[^A-Za-z0-9\-]/', '', $string); // Removes special chars.
        return preg_replace('/-+/', '', $string); // Replaces multiple hyphens with single one.
    }



}
